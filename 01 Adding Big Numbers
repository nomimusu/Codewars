//解法一
function add(a, b) {
  let res = '', c = 0;
  
  a = a.split('');
  b = b.split('');
  
  while(a.length || b.length || c){
    c += ~~a.pop() + ~~b.pop();
    res = c%10 + res;
    c = c>9;
  }
  
  return res;
}

//解法二
function add(a, b) {
 //求两个字符中，字符最长值
  const maxLen = Math.max(a.length,b.length);
  
  //将较短的字符长度用0填充到maxLen的长度
  a = a.padStart(maxLen,'0');
  b = b.padStart(maxLen,'0');
  
  //初始化res, 进位值
  let res = '', c = 0;
  
  //从低位的数字开始相加
  for(let i = maxLen - 1;i>=0;i--){
    const digit1 = parseInt(a[i]);
    const digit2 = parseInt(b[i]);
    const digitSum = digit1 + digit2 + c;
    
    res = (digitSum%10) + res;
    
    c = Math.floor(digitSum/10);
  }
  
  //如果最高位相加，还产生了进位
  if(c){
    res = 1 + res;
  }
  
  return res;
}
