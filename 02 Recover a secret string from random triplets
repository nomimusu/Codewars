var recoverSecret = function(triplets) {
  //取出所有triple中的第一个元素
  for(let [first] of triplets){
    //如果该元素要么在每个triple中索引为0的位置，要么不在triple，说明该元素是原始字符串的第一个元素
    if(triplets.every(tuple => tuple.indexOf(first) <= 0)){
      //找出所有在索引为0的位置上都是该元素的triple，并且删除这些triple的该元素
      triplets.filter(([item]) => item === first).forEach(tuple => tuple.shift());
      //first为元素字符串的第一个字符，通过递归调用recoverSecret函数来找到第二，第三个等字符
      return first + recoverSecret(triplets.filter(tuple => tuple.length >0));
    }
  }
  
  return '';
}
